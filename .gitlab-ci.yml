stages:
  - build
  - release
  - deploy
  - check

variables:
  IMAGE_TAG: latest
  IMAGE_NAME: elfin_test

build_image:
  stage: build
  tags:
    - elfin_docker
  script:
    - docker build -t "${IMAGE_NAME}:${CI_COMMIT_SHA}" .

push2registry:
  stage: release
  tags:
    - elfin_docker
  before_script:
    - echo -n "${REMOTE_REGISTRY_PASS}"| docker login -u "${REMOTE_REGISTRY_USER}" --password-stdin 
  script:
    - docker tag "${IMAGE_NAME}:${CI_COMMIT_SHA}" "${REMOTE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
    - docker push "${REMOTE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"

deploy2k8s:
  stage: deploy
  tags:
    - elfin_docker
  image:
    name: alpine/helm:3.12.0
    entrypoint: [""]
  before_script:
    - mkdir -p ~/.kube
    - cat ${KUBECONFIGFILE} > ~/.kube/config
    - cat ${CA_CRT} > ~/.kube/ca.crt
    - cat ${CLIENT_CRT} > ~/.kube/client.crt
    - cat ${CLIENT_KEY} > ~/.kube/client.key
  script:
    - helm upgrade --install --atomic test-task ./helm/test_task

test-deploytment:
  stage: check
  tags:
    - elfin_docker
  image:
    name: alpine/helm:3.12.0
    entrypoint: [""]
  before_script:
    - mkdir -p ~/.kube
    - cat ${KUBECONFIGFILE} > ~/.kube/config
    - cat ${CA_CRT} > ~/.kube/ca.crt
    - cat ${CLIENT_CRT} > ~/.kube/client.crt
    - cat ${CLIENT_KEY} > ~/.kube/client.key
  script:
    - helm test test-task

